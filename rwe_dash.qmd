---
title: "Datenübersicht"
author: by Eylem Kanol, Arne Maaß & Johanna Knoesel
format:
  dashboard:
    theme:
      light: simplex
      dark: darkly
    nav-buttons:
          - icon: github
            href: https://github.com/arnemaass/rwe_dash 
lang: de
server: shiny
---



```{r}
#| context: setup

# TO DO:
# - German/Englisch-Version: https://marioangst.com/de/blog/posts/multi-language-quarto/
#   profiles with individual yaml hearders


# rm(list = ls())

# locally
# setwd("C:/Users/user/OneDrive/Desktop/WZB/PMK/2024/quarto_dash")
# shared
# setwd("Z:/Shared/Shiny/2024/quarto_dash")


library(tidyverse)
library(quarto)
library(arrow) # PARQUET FOR FASTER LOADING
library(ggplot2)
library(viridis)
library(hrbrthemes)
library(sf)
library(leaflet) # for faster map-plotting then plotly
library(htmltools)
library(rsconnect)
library(shiny)


pmk_zs <- read_parquet("data/PMK_shiny.parquet")
rwm<- readRDS("data/data_kreise.rds")
rwm1<- readRDS("data/rwm_shiny.rds")
rs <- read_parquet("data/klanfrright23.parquet")

####

rs$land <- as.factor(rs$land)

```


<!-- GERMAN VERSION --> 


# Start

```{r}

mainPanel(
  h2("Rechte Mobilisierung und politisch motivierte Kriminalität in Deutschland 2000-2022", style = "text-align: center;"),
  h5("Eylem Kanol, Arne Maaß & Johanna Knoesel", style = "text-align: center;"),
  tags$br(),
  h5(HTML(
  "Dieses Dashboard visualisiert drei selbsterstellte Datensätze zu rechtem Extremismus in Deutschland.<br>
  Oben können Sie zwischen den Visualisierungen wechseln und die Daten nach Ihren Wünschen filtern. <br>  <br>
  Politisch motivierte Kriminalität zeigt die jährliche Entwicklung verschiedener ideologisch motivierter Straftaten auf Grundlage von Verfassungsschutzberichten.<br>
  Die zweite Visualisierung ist eine monatliche Zeitreihe für rechtsextremistische Straftaten nach Bundesländern. <br>
  Zuletzt wird die Mobilisierung von Demonstrationen, welche vom Verfassungsschutz als gesichert rechtsextremistisch eingestuft wurden, skizziert. <br>  <br>  <br>"),
  style = "text-align: center;"),
  tags$br(),
tags$a(href = "https://www.wzb.eu",
       img(src = "www/wzb-wide-text.png", 
           style = "display: block; margin-left: auto; margin-right: auto; max-width: 100%; height: auto;"),
       style = "position: absolute; bottom: 10px; width: 90%; text-align: center;")
)

```

# Politisch motivierte Kriminalität

```{r}
mainPanel(
  h3("Politisch motivierte Kriminalität 2000-2020"),
  h5("Die Daten wurden aus den Verfassungsschutzberichten 2000-2020 entnommen.
  Nicht zu jeder Kategorie und zu jedem Jahr liegen Daten vor, aus diesem Grund können die Graphen
  teilweise lückenhaft sein."),
  plotOutput("plot_pmk", hover=hoverOpts("plot_hover", delay = 50, delayType = "throttle")),
  textOutput('hover_info'))
```

## {.sidebar}

```{r}

selectInput("bl", label = "Hier können Sie ein Bundesland auswählen:",
            choices = c("Deutschland","Baden-Württemberg","Bayern", "Berlin",
                        "Brandenburg", "Bremen", "Hamburg", "Hessen", "Mecklenburg-Vorpommern",
                        "Niedersachsen", "Nordrhein-Westphalen", "Rheinland-Pfalz", "Saarland",
                        "Sachsen", "Sachsen-Anhalt", "Schleswig-Holstein", "Thüringen"),
            selected = "Deutschland")

sliderInput("time", "Hier können Sie den zeitlichen Rahmen festlegen:",
            min = min(pmk_zs$jahr), max = max(pmk_zs$jahr),
            value = c(min(pmk_zs$jahr), max(pmk_zs$jahr)),
            sep = "")

checkboxGroupInput("art", label = "Politische Gesinnung und Art der Straftat:",
                   choices= c("Straftaten-rechts", "Straftaten-links", "Straftaten-islamistisch",
                              "Straftaten-ausländisch", "Gewalttaten-rechts", "Gewalttaten-links",
                              "Gewalttaten-islamistisch", "Gewalttaten-ausländisch"),
                   selected = c("Straftaten-rechts", "Straftaten-links", "Straftaten-islamistisch",
                              "Straftaten-ausländisch", "Gewalttaten-rechts", "Gewalttaten-links",
                              "Gewalttaten-islamistisch", "Gewalttaten-ausländisch"))


```


```{r}
#| context: server
output$plot_pmk <- renderPlot({

    #plot with data
  ggplot(subset(pmk_zs, variable %in% input$art), aes(x=jahr, color=variable)) +
    geom_path(aes_string(y= paste0("`",input$bl,"`")))+
    geom_point(aes_string(y= paste0("`",input$bl,"`")))+
    xlim(input$time[1], input$time[2]) +
      scale_color_manual(
        values =  c("Straftaten-rechts"="gray0",
                    "Straftaten-links"="firebrick",
                    "Straftaten-islamistisch"="forestgreen",
                    "Straftaten-ausländisch"="blue4",
                    "Gewalttaten-rechts"="gold",
                    "Gewalttaten-links"="plum1",
                    "Gewalttaten-islamistisch"="#fffac8",
                    "Gewalttaten-ausländisch"="cornflowerblue"))+
    xlab("Jahr")+
    ylab("Anzahl der Taten")+
    guides(color=guide_legend(title="Art der Straftat:"))+
    theme_ipsum_rc()
    # theme_minimal()
  })

output$hover_info <- renderText({
    print(paste("Anzahl pro Jahr:", as.integer(input$plot_hover$y )))
  })


```

# Rechte Straftaten 

```{r}
mainPanel(
  h3("Rechtsextreme Straftaten 2002 -2022"),
  h5("Hier sehen Sie die monatliche Anzahl rechtsextremistischer Straftaten im Zeitraum von 2002 bis 2022.
     Datengrundlage sind die 'kleinen Anfragen' an den Bundestag durch die Fraktion DIE LINKE."),
  plotOutput("plot_rs", hover=hoverOpts("plot_hover", delay = 50, delayType = "throttle")),
  textOutput('hover_info2'))
```

## {.sidebar}

```{r}

selectInput("tat", label= "Wählen Sie die Art der Straftat",
            choices = c("Insgesamt"= "total",
                        "Gewalttaten"= "gewalt",
                        "Straftaten"= "sonst"),
            selected = "Insgesamt")

sliderInput("time2", "Hier können Sie den zeitlichen Ramen festlegen:",
            min(rs$date, na.rm = T), max(rs$date, na.rm = T),
            value = c(min(rs$date, na.rm = T), max(rs$date, na.rm = T)), 
            timeFormat = "%F")


checkboxGroupInput("BL", label = "Wählen Sie ein Bundesland",
                   choices= levels(rs$land),
                   selected = levels(rs$land))


```


```{r}
#| context: server

output$plot_rs <- renderPlot({
  
  custom_colors <- c(
  "Baden-Württemberg" = "deeppink", "Bayern" = "forestgreen",
  "Berlin" = "gold", "Brandenburg" = "cornflowerblue",
  "Bremen" = "chocolate", "Hamburg" = "darkorchid4",
  "Hessen" = "cyan1", "Mecklenburg-Vorpommern" = "gray0",
  "Niedersachsen" = "#bcf60c", "Nordrhein-Westfalen" = "burlywood4",
  "Rheinland-Pfalz" = "darkcyan", "Saarland" = "plum1",
  "Sachsen" = "blue4", "Sachsen-Anhalt" = "#fffac9",
  "Schleswig-Holstein" = "firebrick1", "Thüringen" = "#aaffc9"
)
  
  ggplot(subset(rs, land %in% input$BL), aes(x=date, color= land))+
    geom_line(aes_string(y=input$tat))+
    geom_point(aes_string(y=input$tat))+
    scale_color_manual(values = custom_colors, drop =F) + 
    xlim(input$time2[1], input$time2[2])+
    xlab("Jahr")+
    ylab("Anzahl der Straftaten")+
    guides(color=guide_legend(title="Bundesland:"))+
    theme_ipsum_rc()
    # theme_minimal()


  })

output$hover_info2 <- renderText({
    print(paste("Anzahl:", as.integer(input$plot_hover$y )))
  })

```

# Rechte Demos

```{r}

mainPanel(
  leafletOutput("interactivePlot"),
  h3("Rechtsextreme Demonstrationen nach Landkreisen 2005-2022"),
  h5(HTML("Hier sehen Sie die Anzahl rechtsextremer Demonstrationen und ihre Teilnehmerzahl aufgeteilt nach Landkreisen im Zeitraum 2005-2022. 
  Datengrundlage sind 'kleine Anfragen' an den Bundestag durch die Fraktion DIE LINKE. <br> 
  <a href='https://data.gesis.org/sharing/#!Detail/10.7802/2256' target='_blank'> Quelle: Kanol, E.; Knoesel, J. (2021): Right-Wing Extremist Mobilization in Germany. Version 1.0.0. WZB Berlin Social Science Center. Dataset.</a>"))
)

```

## {.sidebar}

```{r}

sliderInput("selectedYear", "Hier können Sie einzelne Jahre auswählen (L-R Pfeiltasten zum Schieben):",
            min = min(rwm$year, na.rm = TRUE),
            max = max(rwm$year, na.rm = TRUE),
            value = min(rwm$year, na.rm = TRUE), # Standardmäßig das erste Jahr auswählen
            step = 1, # Ermöglicht die Auswahl von einzelnen Jahren
            sep = "",
            ticks = FALSE)

radioButtons("fillVariable", "Wählen Sie zwischen der jährlich aggregierten:",
                   choices = c("Anzahl der Demonstrationen" = "demo_count",
                               "Anzahl der TeilnehmerInnen" = "participants"))

```


```{r}
#| context: server


output$interactivePlot <- renderLeaflet({

    rwm1_filtered <- filter(rwm1, year == input$selectedYear)

    fill_variable <- if(input$fillVariable == "demo_count")  {
      "demo_count"
      } else {
        "participants"
        }

    # Determine the range of log-transformed values for coloring
    limits <- c(0, max(log10(rwm1[[fill_variable]]+1), na.rm = TRUE))

    color_pal <- colorNumeric(palette = viridis(256, option = "B"), domain = limits)


    # Create the Leaflet map
    leaflet(rwm1_filtered) %>%
      addTiles() %>%
      addProviderTiles(providers$CartoDB.Positron) %>%
      addPolygons(
        fillColor = ~color_pal(log10(rwm1_filtered[[fill_variable]])), # Log10 transfo for better scaling
        weight = 1,
        opacity = 1,
        color = "gray",
        dashArray = "2",
        fillOpacity = 0.7,
        smoothFactor = 0.5,
        label = ~sprintf("%s | Anzahl: %s",
                     rwm1_filtered$kreis,
                     rwm1_filtered[[fill_variable]]-1),
        highlightOptions = highlightOptions(
          weight = 3,
          color = "#666",
          dashArray = "",
          fillOpacity = 0.7,
          bringToFront = TRUE
          )
        ) %>%
      setView(lng = 10.5, lat = 51.2, zoom = 6) %>%
      addLegend(
        pal = color_pal,
        values = ~log10(rwm1[[fill_variable]] +1),
        opacity = 0.7,
        title = "Anzahl:",
        position = "bottomright",
        labFormat = labelFormat(transform = function(x) round(10^x)) # Manually adjust label format to show original scale
        )
  })



```





